{
  "name": "grunt-curl",
  "description": "Download files from the internet via grunt.",
  "version": "1.4.0",
  "homepage": "https://github.com/twolfson/grunt-curl",
  "author": {
    "name": "Todd Wolfson",
    "email": "todd@twolfson.com",
    "url": "http://twolfson.com/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/twolfson/grunt-curl.git"
  },
  "bugs": {
    "url": "https://github.com/twolfson/grunt-curl/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/twolfson/grunt-curl/blob/master/LICENSE-MIT"
    }
  ],
  "main": "grunt.js",
  "bin": {
    "grunt-curl": "bin/grunt-curl"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "doubleshot"
  },
  "dependencies": {
    "request": "~2.33.0",
    "grunt-retro": "~0.7.0",
    "async": "~0.2.10",
    "lodash": "~2.4.1"
  },
  "_devDependencies": {
    "grunt": "~0.3.17",
    "doubleshot": "~2.13.1",
    "chai": "~1.5.0",
    "grunt-contrib-clean": "~0.3.2",
    "express": "~3.4.4"
  },
  "devDependencies": {
    "grunt": "~0.4.0",
    "doubleshot": "~2.13.1",
    "chai": "~1.9.0",
    "grunt-contrib-clean": "~0.5.0",
    "express": "~3.4.4",
    "grunt-cli": "~0.1.13"
  },
  "keywords": [
    "gruntplugin",
    "grunt",
    "curl",
    "download",
    "request",
    "file",
    "url",
    "uri"
  ],
  "readme": "# grunt-curl [![Build status](https://travis-ci.org/twolfson/grunt-curl.png?branch=master)](https://travis-ci.org/twolfson/grunt-curl)\n\nDownload files from the internet via grunt.\n\n## Getting Started\nInstall this grunt plugin next to your project's [grunt.js gruntfile][getting_started] with: `npm install grunt-curl`\n\nThen add this line to your project's `grunt.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-curl');\n```\n\n[grunt]: http://gruntjs.com/\n[getting_started]: https://github.com/gruntjs/grunt/blob/master/docs/getting_started.md\n\n## Documentation\n`grunt-curl` retrieves data via [request][request] and writes it to file.\n\nWe register two grunt tasks\n```js\ngrunt.initConfig({\n  // Grab single files\n  curl: {\n    // Short format (dest: src)\n    'location/to/download/file.js': 'http://files.com/path/to/file.js',\n\n    // Long format\n    long: {\n      src: 'http://files.com/path/to/file.js',\n      dest: 'location/to/download/file.js'\n    },\n\n    // Use any of request's options\n    custom: {\n      src: {\n        url: 'http://files.com/path/to/file.js',\n        method: 'POST',\n        body: 'abc'\n      },\n      dest: 'location/to/download/file.js'\n    }\n  },\n  // Grab multiple files\n  'curl-dir': {\n    // Short format (dest folder: [src1, src2])\n    // These will be saved as 'location/to/save/files/file1.js'\n    //    and 'location/to/save/files/file2.js'\n    'location/to/save/files': [\n      'http://files.com/path/to/file1.js',\n      'http://generic.com/scripts/file2.js'\n    ],\n\n    // Long format\n    long: {\n      src: [\n        'http://files.com/path/to/file1.js',\n        'http://files.com/path/to/file2.js'\n      ],\n      dest: 'location/to/save/files'\n    },\n\n    // src files will expand to same file1.js and file2.js as long format\n    braceExpansion: {\n      src: ['http://files.com/path/to/{file1,file2}.js'],\n      dest: 'location/to/save/files'\n    },\n\n    // Custom filepaths\n    // This will save file1.js to location/to/save/files/path/to/file1.js\n    //    and file2.js to location/to/save/files/scripts/file2.js\n    customFilepaths: {\n      src: [\n        'http://files.com/path/to/file1.js',\n        'http://generic.com/scripts/file2.js'\n      ],\n      router: function (url) {\n        return url.replace('http://files.com/', '').replace('http://generic.com/', '');\n      },\n      dest: 'location/to/save/files'\n    },\n\n    // Use any of request's options\n    custom: {\n      src: [{\n        url: 'http://files.com/path/to/file.js',\n        method: 'POST',\n        body: 'abc'\n      }],\n      dest: 'location/to/save/files'\n    }\n  }\n}):\n```\n\nand a grunt helper\n```js\ngrunt.helper('curl', url, function handleData (err, content) {\n  // Handle error and use content\n});\n```\n\n[request]: https://github.com/mikeal/request\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint your code using [grunt][grunt] and test via `npm test`.\n\n## Donating\nSupport this project and [others by twolfson][gittip] via [gittip][].\n\n[![Support via Gittip][gittip-badge]][gittip]\n\n[gittip-badge]: https://rawgithub.com/twolfson/gittip-badge/master/dist/gittip.png\n[gittip]: https://www.gittip.com/twolfson\n\n## License\nCopyright (c) 2013 Todd Wolfson\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-curl@1.4.0",
  "dist": {
    "shasum": "39410f76c2b165a14c200a2bb8ff59ae9036daa2"
  },
  "_from": "grunt-curl @",
  "_resolved": "https://registry.npmjs.org/grunt-curl/-/grunt-curl-1.4.0.tgz"
}
